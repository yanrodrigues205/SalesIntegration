version: "3.8"

services:
  redis:
    image: redis:latest
    container_name: redis_service
    command: ["redis-server", "--appendonly", "yes", "--port", "6379"]
    volumes:
      - redis_data:/data
    networks:
      - rede_geral
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 1024M
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: sales_integration
      MYSQL_USER: gerenciador
      MYSQL_PASSWORD: gerenciador123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: gerenciador
      PMA_PASSWORD: gerenciador123
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.2"

  postgres:
    image: postgres:14.13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: typebot
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rede_geral
    restart: always
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  evolution_v2:
    image: atendai/evolution-api:v2.1.1-homolog
    container_name: evolution_v2
    volumes:
      - evolution_instancesv2:/evolution/instances
    networks:
      - rede_geral
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - redis
      - postgres
    environment:
      - SERVER_URL=http://localhost:8080
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=KFZOm3Hc3GSNWwHBywEm67xYgjN8xGTH
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - LANGUAGE=pt-BR
      - CONFIG_SESSION_PHONE_CLIENT=InovaBoost
      - CONFIG_SESSION_PHONE_NAME=chrome
      - CONFIG_SESSION_PHONE_VERSION=2.3000.1015901307
      - WA_BUSINESS_TOKEN_WEBHOOK=evolution
      - WA_BUSINESS_URL=https://graph.facebook.com
      - WA_BUSINESS_VERSION=v20.0
      - WA_BUSINESS_LANGUAGE=pt_BR
      - QRCODE_LIMIT=1902
      - QRCODE_COLOR=#000000
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_CONNECTION_URI=postgresql://postgres:postgres@postgres:5432/evolution
      - DATABASE_CONNECTION_CLIENT_NAME=evolution
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
      - OPENAI_ENABLED=false
      - DIFY_ENABLED=false
      - S3_ENABLED=false
      - S3_ACCESS_KEY=
      - S3_SECRET_KEY=
      - S3_BUCKET=evolution
      - S3_PORT=443
      - S3_ENDPOINT=
      - S3_USE_SSL=true
      - CACHE_REDIS_ENABLED=true
      - CACHE_REDIS_URI=redis://redis_service:6379/2
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
      - DEL_INSTANCE=2
      - DEL_TEMP_INSTANCES=false
      - TYPEBOT_ENABLED=true
      - TYPEBOT_API_VERSION=latest
      - CHATWOOT_ENABLED=false
      - RABBITMQ_ENABLED=false
      - WEBHOOK_GLOBAL_ENABLED=false
      - WEBHOOK_EVENTS_MESSAGES_SET=true
      - WEBHOOK_EVENTS_MESSAGES_UPSERT=true
      - WEBHOOK_EVENTS_MESSAGES_EDITED=true
      - WEBHOOK_EVENTS_MESSAGES_UPDATE=true
      - WEBHOOK_EVENTS_MESSAGES_DELETE=true
      - WEBHOOK_EVENTS_SEND_MESSAGE=true
      - WEBHOOK_EVENTS_CONTACTS_SET=true
      - WEBHOOK_EVENTS_CONTACTS_UPSERT=true
      - WEBHOOK_EVENTS_CONTACTS_UPDATE=true
      - WEBHOOK_EVENTS_PRESENCE_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_SET=true
      - WEBHOOK_EVENTS_CHATS_UPSERT=true
      - WEBHOOK_EVENTS_CHATS_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_DELETE=true
      - WEBHOOK_EVENTS_GROUPS_UPSERT=true
      - WEBHOOK_EVENTS_GROUPS_UPDATE=true
      - WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=true
      - WEBHOOK_EVENTS_CONNECTION_UPDATE=true
      - WEBHOOK_EVENTS_LABELS_EDIT=true
      - WEBHOOK_EVENTS_LABELS_ASSOCIATION=true
      - WEBHOOK_EVENTS_CALL=true
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  typebot-builder:
    image: baptistearno/typebot-builder:latest
    restart: always
    depends_on:
      - postgres
      - minio
    ports:
      - "3000:3000"
    command: sh -c "npx prisma migrate deploy && npm run start"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/typebot
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXT_PUBLIC_VIEWER_URL=http://localhost:3001
      - ENCRYPTION_SECRET=K+Bar660Ofaec7v1jHC25tAn3l2b7c81
      - ADMIN_EMAIL=cleancitysystem@gmail.com
      - DISABLE_SIGNUP=false
      - SMTP_AUTH_DISABLED=false
      - SMTP_SECURE=true
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=465
      - SMTP_USERNAME=cleancitysystem@gmail.com
      - SMTP_PASSWORD=wxio glro ozjr yebe
      - NEXT_PUBLIC_SMTP_FROM=cleancitysystem@gmail.com
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET=typebot
      - S3_ENDPOINT=http://localhost:9000
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    restart: always
    depends_on:
      - postgres
      - minio
    ports:
      - "3001:3000"
    command: npm run start
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/typebot
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXT_PUBLIC_VIEWER_URL=http://localhost:3001
      - ENCRYPTION_SECRET=K+Bar660Ofaec7v1jHC25tAn3l2b7c81
      - SMTP_HOST=smtp.gmail.com
      - NEXT_PUBLIC_SMTP_FROM=cleancitysystem@gmail.com
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_BUCKET=typebot
      - S3_ENDPOINT=http://localhost:9000
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  minio:
    image: minio/minio
    restart: always
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - typebot_s3_data:/data
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: "0.5"

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 minio minio123;
      /usr/bin/mc mb minio/typebot;
      /usr/bin/mc anonymous set public minio/typebot/public;
      exit 0;
      "
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.2"

  mail:
    image: bytemark/smtp
    restart: always
    networks:
      - rede_geral
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.2"

volumes:
  redis_data:
    external: false
    name: redis_data
  postgres_data:
    external: false
    name: postgres_data
  evolution_instancesv2:
    external: false
    name: evolution_instancesv2
  typebot_s3_data:
    external: false
    name: typebot_s3_data
  mysql_data:
    external: false
    name: mysql_data

networks:
  rede_geral:
    external: true
